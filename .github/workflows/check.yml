permissions:
  contents: read
# runs on push to the main branch, and PRs
on:
  push:
    branches: [main]
  pull_request:
name: check
jobs:

  # 1. formatting
  fmt:
    runs-on: ubuntu-latest
    name: stable / fmt
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: cargo fmt --check
        run: cargo fmt --check

  # 2. clippy lints
  clippy:
    runs-on: ubuntu-latest
    name: ${{ matrix.toolchain }} / clippy
    permissions:
      contents: read
      checks: write
    strategy:
      fail-fast: false
      matrix:
        toolchain: [stable]
        # toolchain: [stable, beta]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: clippy
      - name: cargo clippy
        # uses: actions-rs/clippy-check@v1
        # with:
        #   token: ${{ secrets.GITHUB_TOKEN }}
        # NOTE: CUSTOM
        run: cargo clippy --features=std,use_vendored_bindings

  # 2. documentation
  doc:
    runs-on: ubuntu-latest
    name: nightly / doc
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install nightly
        uses: dtolnay/rust-toolchain@nightly
      - name: cargo doc
        # NOTE: CUSTOM
        run: cargo doc --features=nightly,std,use_vendored_bindings
        env:
          RUSTDOCFLAGS: --cfg docsrs

  # 3. hack
  # NOTE:DISABLED
  # TODO:IMPROVE
  # hack:
  #   runs-on: ubuntu-latest
  #   name: ubuntu / stable / features
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: true
  #     - name: Install stable
  #       uses: dtolnay/rust-toolchain@stable
  #     - name: cargo install cargo-hack
  #       uses: taiki-e/install-action@cargo-hack
  #     - name: cargo hack
  #       run: cargo hack --feature-powerset check --lib --tests
  #

  # 4. MSRV
  msrv:
    runs-on: ubuntu-latest
    # we use a matrix here just because env can't be used in job names
    # https://docs.github.com/en/actions/learn-github-actions/contexts#context-availability
    strategy:
      matrix:
      # NOTE:CUSTOM keep in sync with Cargo.toml
        msrv: [1.64.0]
    name: ubuntu / ${{ matrix.msrv }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install ${{ matrix.msrv }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.msrv }}
      - name: cargo +${{ matrix.msrv }} check
        # NOTE: CUSTOM
        run: cargo check --features=std,use_vendored_bindings
